mcu is attiny1614

MISC:

PA0 - UPDI (only)
PA1 - TXDEBUG
     - shorted low with a 22k resistor for CONFIG1 option 
     (default not shorted)
     - Test at boot time, then use as a debug output.


ANALOGUE:

PA7 - ISENSE
    - USE ADC1 AIN3
PB0 - VSENSE
    - USE ADC0 AIN2


INPUTS:

PB3 - PWMIN1
PA3 - PWMIN2

Can use TCB0 and TCB1 to measure the width of the pulses. The events
can use any gpio pin for input.

We can trigger an irq on the event OR
just poll the registers in the main loop.


PA7 - GNDSHUNT - use ADC. Senses current.
    connected to a 0.005 ohm sense resistor with a Res/Cap for low pass
    

MOTORS:

Motor enable pins can be driven by TCA0 outputs. 

Alternatively the pins can be driven directly by programmed IO in the
main loop. That might be easier; leave TCA to run free and just use
it as a time reference.

PB2 - MOTOR_ENABLE_1 - Active high enables the gates on M1
    Also connected to LED.
PA4 - MOTORF_1 - drives side 1 of M1 high
PA5 - MOTORR_1 - drives side 2 of M2 high



PB1 - MOTOR_ENABLE_2 - Active high enables the gates on M2
PA6 - MOTORF_2
PA2 - MOTORR_2


--- LOOPING
Suppose we have a PWM frequency of 200hz,
PWM period 5ms
If clock freq is 10mhz,
Divide by 16 so TCA period is 1.6us

Run Timer A up to 62500 then we will have a timer restart exactly 100ms

We can use this timer for general timing as well as PWM output.

Duty cycle:
    Run MOTOR1 and MOTOR2 at the required duty cycle on their ENABLE pins
    BUT always turn both sides low for a short time e.g. 1%
        to allow bootstrap capacitors to recharge.
        

Assuming 5mohm

    P = I^2R

at 20 amps P = 400* 0.005 = 2 watts
at 25 amps P = 625 * 0.005 = 3.125 watts - approx max continuous

---

Peripheral usage:
TCB0, TCB1 - rxin measuring pulse widths
TCA0 - motor pwm and stuff
TCD0 

ADC0 - used briefly at poweron for sensing config pin
ADC0 - VSENSE - pin PB0 - voltage sensing (in hw revision 3)
ADC1 - ISENSE - current sensing - pin PB7 (in hw revision 3)

ADC0 - ISENSE - in hw revision 2 
